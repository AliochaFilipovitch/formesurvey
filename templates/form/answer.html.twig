{% extends 'base.html.twig' %}

{% block title %}{{ survey.title }}{% endblock %}

{% block body %}
	<div class="row">
	  <div class="col-sm-4" style="background-color:
		{% if survey.status %}
			honeydew
		{% else %}
			mistyrose
		{% endif %}
		;">
		<h1 class="display-4">{{ survey.title }}</h1>
		<p>{{ survey.description }}</p>
		<h5>{{ survey.questions | length }} Question{% if survey.questions | length > 1 %}s{% endif %} &#8226;
		<STRONG>
			{% if survey.status %}
				OUVERT
			{% else %}
				FERMÉ
			{% endif %}
		</STRONG>
		</h5>
		<p>
			<small class="text-muted">
				Enquête réalisée par {{ survey.author.username }}, le {{ survey.createdAt | date('d M Y') }}
			</small>
		</p>
	  </div>
	  <div class="col-sm-8">
	  	{% if (survey.questions | length) > 0 %}
			{% set num = 0 %}
			{% for question in survey.questions %}
				{% set num = num + 1 %}
				<div class="card mb-1 mt-1">
				  <div class="card-body">
				    <h5 class="card-title">{{ num }}. {{ question.question }}</h5>
				    <div class="form-group">
						{% for answer in question.answers %}
							{% if answer.author == app.user %}
								{% if (answer.answer | length) > 0 %}
									<div class="alert alert-info {{ question.id }} m-1" role="alert">
											<i class="fas fa-hourglass-start"></i>
											Vous avez indiqué le {{ answer.createdAt | date('d/m') }}
										{% if question.categoryQuestion.id == 1 %}
											que votre humeur était de {{ answer.answer }} sur 5.
										{% elseif question.categoryQuestion.id == 2 %}
											mettre {{ answer.answer }} &#9733; à cette question.
										{% elseif question.categoryQuestion.id == 3 %}
											mettre {{ answer.answer }} sur 10 à cette question.
										{% elseif question.categoryQuestion.id == 4 %}
											choisir
												{% for questionMultipleChoice in question.questionMultipleChoices %}
													{% if questionMultipleChoice.id == answer.answer %}
														<STRONG>
															"{{ questionMultipleChoice.content }}"
														</STRONG>
													{% endif %}
												{% endfor %}
											à cette question.
										{% elseif question.categoryQuestion.id == 5 %}
											: <STRONG>"{{ answer.answer }}"</STRONG>
										{% endif %}
									</div>
								{% endif %}
							{% endif %}
						{% endfor %}
					    {% if question.categoryQuestion.id == 1 %}
							{% include 'block/mood.html.twig' %}
					    {% elseif question.categoryQuestion.id == 2 %}
							{% include 'block/star.html.twig' %}
					    {% elseif question.categoryQuestion.id == 3 %}
							{% include 'block/mark.html.twig' %}
					    {% elseif question.categoryQuestion.id == 4 %}
							{% include 'block/choice.html.twig' %}
					    {% elseif question.categoryQuestion.id == 5 %}
							{% include 'block/text.html.twig' %}
					    {% elseif question.categoryQuestion.id == 6 %}
							{% include 'block/gif.html.twig' %}
						{% endif %}
				    </div>
				  </div>
				</div>
			{% endfor %}
			<hr><p class="text-center"><small class="text-muted">fin de l'enquête</small></p>
		{% else %}
			<p class="text-center"><small class="text-muted">Il n'y a pas de question encore.</small></p>
		{% endif %}
	  </div>
	</div>

{% endblock %}

{% block javascripts %}
	<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
	<script>


		function onClickAnswerSelected(event){
			event.preventDefault();

			const url = this.href;
			const selectId = this.id;
			console.log(selectId);

			document.querySelectorAll('.contentImg').forEach(function(content){
				if (content.classList.contains(selectId)) {
					content.classList.replace('backgroundcolorgreen','backgroundcolorwhite');
				} 
			});

			document.querySelectorAll('div.alert-info').forEach(function(alert){
				if (alert.classList.contains(selectId)) {
					alert.hidden = true;
				}
			});

			const contentImg = this.querySelector('.contentImg');

			axios.get(url).then(function(response) {

				if (contentImg.classList.contains(response.data.answer)) {
					contentImg.classList.replace('backgroundcolorwhite','backgroundcolorgreen');

				} 

				console.log(response.data.answer);
			});
		}

		document.querySelectorAll('a.js-selected').forEach(function(link){
			link.addEventListener('click', onClickAnswerSelected);
		});

    	function onClickPostAnswer(event){
    		event.preventDefault();

    		const selectId = this.id;
    		console.log(selectId);
    		
    		const saisie = document.getElementById(selectId).value;

    		var url = this.href;
    		url = url.replace("value", saisie);

    		document.querySelectorAll('div.alert-info').forEach(function(alert){
				if (alert.classList.contains(selectId)) {
					alert.hidden = true;
				}
			});

			axios.get(url).then(function(response) {
				console.log(response.data.answer);

				document.querySelectorAll('div.alert-success').forEach(function(alert){
					if (alert.classList.contains(selectId)) {
						alert.hidden = false;
						console.log(alert.firstChild.textContent);
						alert.firstChild.textContent = "\""+response.data.answer+"\"";
					} 
				});
			});
    	}    	

		document.querySelectorAll('div.alert-success').forEach(function(alert){
			alert.hidden = true;
		});

    	document.querySelectorAll('a.js-text').forEach(function(link){
			link.addEventListener('click', onClickPostAnswer);
		});    	

		function onClickPostGif(event){
    		event.preventDefault();

    		var url = this.href;
    		var selectId = this.id;
    		console.log(selectId);

			document.querySelectorAll('img').forEach(function(img){
				if (img.classList.contains(selectId)) {
					img.classList.replace('backgroundcolorgreen','backgroundcolorwhite');
				} 
			});

			document.querySelectorAll('div.alert-info').forEach(function(alert){
				if (alert.classList.contains(selectId)) {
					alert.hidden = true;
				}
			});

			axios.get(url).then(function(response) {
				console.log(response.data.answer);

				document.querySelectorAll('img').forEach(function(img){
					
					if (img.classList.contains(response.data.answer)) {
						img.classList.replace('backgroundcolorwhite','backgroundcolorgreen');

					} 
				});


			});
    	}    	

		function onClickSearchGif(event){
    		event.preventDefault();

    		const selectId = this.id;
    		console.log(selectId);
    		
    		const saisieGif = document.getElementById(selectId).value;

    		var url = this.href;
    		url = url.replace("value", saisieGif);

			axios.get(url).then(function(response) {
				console.log(response.data.srcs);

				document.querySelectorAll('div.gif').forEach(function(gif){
					if (gif.classList.contains(selectId)) {

						for (var i = 0; i < response.data.srcs.length; i++) {
							
							const getId = response.data.ids[i];
							
							console.log(getId);

						    const route = {
						        myroute:{
						            route:"{{ path('postAnswer', {'id': 'id', 'value': 'value'}, true) }}"
						        },
						    };
							
							const a = document.createElement('a');
							a.className = 'js-post-gif';
							a.id = selectId;
							// a.href = "../form/post/"+selectId+"/"+getId;
							a.href = route.myroute.route;

			        		a.href = a.href.replace("id", selectId);
			        		a.href = a.href.replace("value", getId);
							
							gif.appendChild(a);

						    console.log(a.href);

							const img = document.createElement('img');
							img.style.height = '205px';
							img.style.width = '205px';
							img.src = response.data.srcs[i];
							img.alt = response.data.ids[i];
							img.className = response.data.ids[i];
							img.classList.add(selectId);
							img.classList.add("backgroundcolorwhite");

							a.appendChild(img);

							console.log(document.querySelectorAll('a.js-post-gif'));

							document.querySelectorAll('a.js-post-gif').forEach(function(link){
								link.addEventListener('click', onClickPostGif);
							});
						}
					} 
				});
			});
    	}

    	document.querySelectorAll('a.js-gif').forEach(function(link){
			link.addEventListener('click', onClickSearchGif);
		}); 

	</script>
{% endblock %}
